services:
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/apps/web/node_modules
      - /usr/src/app/apps/web/.next
    environment:
      - NODE_ENV=development
    depends_on:
      - api

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/apps/api/node_modules
      - /usr/src/app/apps/api/dist
    environment:
      - NODE_ENV=development
    depends_on:
      - db
      - redis

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  db:
    image: supabase/postgres:14.1.0
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  kong:
    image: supabase/kong:2.7.0
    ports:
      - "8000:8000"
      - "8443:8443"
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/var/lib/kong/kong.yml
      - KONG_DNS_ORDER=LAST,A,CNAME
      - KONG_PLUGINS=request-transformer,cors,key-auth
    volumes:
      - ./supabase/kong.yml:/var/lib/kong/kong.yml

  auth:
    image: supabase/gotrue:v2.5.3
    ports:
      - "9999:9999"
    environment:
      - GOTRUE_API_HOST=0.0.0.0
      - GOTRUE_API_PORT=9999
      - GOTRUE_DB_DRIVER=postgres
      - GOTRUE_DB_DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - GOTRUE_JWT_SECRET=${JWT_SECRET}
      - GOTRUE_JWT_EXP=3600
      - GOTRUE_SITE_URL=${SITE_URL}
      - GOTRUE_URI_SCHEMES=http,https
      - GOTRUE_MAILER_AUTOCONFIRM=true
    depends_on:
      - db

  rest:
    image: postgrest/postgrest:v9.0.0
    ports:
      - "3000"
    environment:
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - PGRST_DB_SCHEMA=public,storage
      - PGRST_DB_ANON_ROLE=anon
      - PGRST_JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db

  realtime:
    image: supabase/realtime:v0.17.0
    ports:
      - "4000:4000"
    environment:
      - REALTIME_DB_HOST=db
      - REALTIME_DB_PORT=5432
      - REALTIME_DB_USER=${POSTGRES_USER}
      - REALTIME_DB_PASSWORD=${POSTGRES_PASSWORD}
      - REALTIME_DB_NAME=${POSTGRES_DB}
      - REALTIME_JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db

  storage:
    image: supabase/storage-api:v0.15.0
    ports:
      - "5000:5000"
    environment:
      - STORAGE_DB_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - STORAGE_JWT_SECRET=${JWT_SECRET}
      - FILE_SIZE_LIMIT=52428800
      - TENANT_ID=stub
      - REGION=stub
      - GLOBAL_S3_BUCKET=stub
    depends_on:
      - db
      - rest

  studio:
    image: supabase/studio:20220317
    ports:
      - "8080:8080"
    environment:
      - SUPABASE_URL=http://localhost:8000
      - SUPABASE_ANON_KEY=${ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SERVICE_KEY}
    depends_on:
      - kong

volumes:
  redis-data:
  db-data: